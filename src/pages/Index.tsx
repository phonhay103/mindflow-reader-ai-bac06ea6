
import React, { useState } from 'react';
import { Header } from '../components/Header';
import { PDFUpload } from '../components/PDFUpload';
import { FeaturePanel } from '../components/FeaturePanel';
import { ChatInterface } from '../components/ChatInterface';
import { useToast } from '@/hooks/use-toast';

const Index = () => {
  const [uploadedFile, setUploadedFile] = useState<File | null>(null);
  const [extractedText, setExtractedText] = useState<string>('');
  const [activeFeature, setActiveFeature] = useState<string>('');
  const [isLoading, setIsLoading] = useState(false);
  const { toast } = useToast();

  const handleFileUpload = async (file: File) => {
    setIsLoading(true);
    try {
      setUploadedFile(file);
      
      // Enhanced mock text for better AI analysis
      const mockText = `Tr√≠ tu·ªá nh√¢n t·∫°o (AI) ƒëang thay ƒë·ªïi th·∫ø gi·ªõi m·ªôt c√°ch m·∫°nh m·∫Ω v√† to√†n di·ªán. Cu·ªën s√°ch n√†y kh√°m ph√° nh·ªØng ti·∫øn b·ªô v∆∞·ª£t b·∫≠c trong lƒ©nh v·ª±c AI v√† Machine Learning, t·ª´ nh·ªØng kh√°i ni·ªám c∆° b·∫£n ƒë·∫øn c√°c ·ª©ng d·ª•ng ph·ª©c t·∫°p trong th·ª±c t·∫ø.

Ch∆∞∆°ng 1: Gi·ªõi thi·ªáu v·ªÅ Tr√≠ tu·ªá Nh√¢n t·∫°o
Tr√≠ tu·ªá nh√¢n t·∫°o l√† kh·∫£ nƒÉng c·ªßa m√°y t√≠nh ƒë·ªÉ th·ª±c hi·ªán c√°c t√°c v·ª• th∆∞·ªùng y√™u c·∫ßu tr√≠ th√¥ng minh c·ªßa con ng∆∞·ªùi. L·ªãch s·ª≠ ph√°t tri·ªÉn AI b·∫Øt ƒë·∫ßu t·ª´ nh·ªØng nƒÉm 1950 v·ªõi Alan Turing v√† b√†i ki·ªÉm tra Turing n·ªïi ti·∫øng. T·ª´ ƒë√≥ ƒë·∫øn nay, AI ƒë√£ tr·∫£i qua nhi·ªÅu giai ƒëo·∫°n ph√°t tri·ªÉn, t·ª´ AI h·∫πp (Narrow AI) ƒë·∫øn AI t·ªïng qu√°t (General AI) v√† si√™u tr√≠ tu·ªá (Superintelligence).

C√°c kh√°i ni·ªám ch√≠nh:
- Machine Learning: H·ªçc m√°y cho ph√©p h·ªá th·ªëng t·ª± ƒë·ªông c·∫£i thi·ªán hi·ªáu su·∫•t th√¥ng qua kinh nghi·ªám
- Deep Learning: M·∫°ng n∆°-ron s√¢u m√¥ ph·ªèng c√°ch th·ª©c ho·∫°t ƒë·ªông c·ªßa n√£o ng∆∞·ªùi
- Natural Language Processing: X·ª≠ l√Ω ng√¥n ng·ªØ t·ª± nhi√™n gi√∫p m√°y t√≠nh hi·ªÉu v√† t∆∞∆°ng t√°c b·∫±ng ng√¥n ng·ªØ con ng∆∞·ªùi
- Computer Vision: Th·ªã gi√°c m√°y t√≠nh cho ph√©p nh·∫≠n di·ªán v√† x·ª≠ l√Ω h√¨nh ·∫£nh

Ch∆∞∆°ng 2: Machine Learning v√† Deep Learning
Machine Learning l√† m·ªôt nh√°nh c·ªßa AI cho ph√©p m√°y t√≠nh h·ªçc h·ªèi t·ª´ d·ªØ li·ªáu m√† kh√¥ng c·∫ßn ƒë∆∞·ª£c l·∫≠p tr√¨nh c·ª• th·ªÉ. C√≥ ba lo·∫°i ch√≠nh:

1. H·ªçc c√≥ gi√°m s√°t (Supervised Learning): S·ª≠ d·ª•ng d·ªØ li·ªáu ƒë∆∞·ª£c g√°n nh√£n ƒë·ªÉ ƒë√†o t·∫°o m√¥ h√¨nh
2. H·ªçc kh√¥ng gi√°m s√°t (Unsupervised Learning): T√¨m ki·∫øm m·∫´u trong d·ªØ li·ªáu kh√¥ng ƒë∆∞·ª£c g√°n nh√£n
3. H·ªçc tƒÉng c∆∞·ªùng (Reinforcement Learning): H·ªçc th√¥ng qua t∆∞∆°ng t√°c v·ªõi m√¥i tr∆∞·ªùng v√† nh·∫≠n ph·∫£n h·ªìi

Deep Learning s·ª≠ d·ª•ng m·∫°ng n∆°-ron nh√¢n t·∫°o v·ªõi nhi·ªÅu l·ªõp ·∫©n ƒë·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu ph·ª©c t·∫°p nh∆∞ h√¨nh ·∫£nh, √¢m thanh v√† vƒÉn b·∫£n.

Ch∆∞∆°ng 3: ·ª®ng d·ª•ng AI trong Th·ª±c t·∫ø
AI ƒëang ƒë∆∞·ª£c ·ª©ng d·ª•ng r·ªông r√£i trong nhi·ªÅu lƒ©nh v·ª±c:

Y t·∫ø:
- Ch·∫©n ƒëo√°n h√¨nh ·∫£nh y t·∫ø v·ªõi ƒë·ªô ch√≠nh x√°c cao
- Ph√°t hi·ªán s·ªõm c√°c b·ªánh ung th∆∞
- Ph√°t tri·ªÉn thu·ªëc m·ªõi th√¥ng qua AI
- Robot ph·∫´u thu·∫≠t ch√≠nh x√°c

Giao th√¥ng:
- Xe t·ª± l√°i v·ªõi c√¥ng ngh·ªá c·∫£m bi·∫øn ti√™n ti·∫øn
- T·ªëi ∆∞u h√≥a giao th√¥ng ƒë√¥ th·ªã
- D·ª± ƒëo√°n v√† ph√≤ng ng·ª´a tai n·∫°n

T√†i ch√≠nh:
- Ph√°t hi·ªán gian l·∫≠n t·ª± ƒë·ªông
- Trading algorithmique
- ƒê√°nh gi√° r·ªßi ro t√≠n d·ª•ng
- Chatbot t∆∞ v·∫•n t√†i ch√≠nh

Gi√°o d·ª•c:
- H·ªçc t·∫≠p c√° nh√¢n h√≥a
- ƒê√°nh gi√° t·ª± ƒë·ªông
- Tutor AI th√¥ng minh
- N·ªôi dung h·ªçc t·∫≠p th√≠ch ·ª©ng

Ch∆∞∆°ng 4: Th√°ch th·ª©c v√† C∆° h·ªôi
M·∫∑c d√π AI mang l·∫°i nhi·ªÅu l·ª£i √≠ch, n√≥ c≈©ng ƒë·∫∑t ra nh·ªØng th√°ch th·ª©c nghi√™m tr·ªçng:

Th√°ch th·ª©c ƒë·∫°o ƒë·ª©c:
- Bias trong d·ªØ li·ªáu v√† thu·∫≠t to√°n
- Quy·ªÅn ri√™ng t∆∞ v√† b·∫£o m·∫≠t d·ªØ li·ªáu
- Tr√°ch nhi·ªám v√† gi·∫£i tr√¨nh c·ªßa AI
- C√¥ng b·∫±ng trong ti·∫øp c·∫≠n c√¥ng ngh·ªá

T√°c ƒë·ªông x√£ h·ªôi:
- Thay th·∫ø lao ƒë·ªông v√† th·∫•t nghi·ªáp
- B·∫•t b√¨nh ƒë·∫≥ng k·ªπ thu·∫≠t s·ªë
- Ph·ª• thu·ªôc v√†o c√¥ng ngh·ªá
- An ninh m·∫°ng v√† AI weaponization

C∆° h·ªôi ph√°t tri·ªÉn:
- Gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ to√†n c·∫ßu nh∆∞ bi·∫øn ƒë·ªïi kh√≠ h·∫≠u
- N√¢ng cao ch·∫•t l∆∞·ª£ng cu·ªôc s·ªëng
- TƒÉng nƒÉng su·∫•t lao ƒë·ªông
- Kh√°m ph√° khoa h·ªçc m·ªõi

Ch∆∞∆°ng 5: T∆∞∆°ng lai c·ªßa AI
T∆∞∆°ng lai c·ªßa AI h·ª©a h·∫πn nh·ªØng ƒë·ªôt ph√° ƒë√°ng kinh ng·∫°c:

C√°c xu h∆∞·ªõng ch√≠nh:
- AI t·ªïng qu√°t (AGI) c√≥ th·ªÉ th·ª±c hi·ªán m·ªçi t√°c v·ª• tr√≠ tu·ªá
- Quantum computing k·∫øt h·ª£p v·ªõi AI
- Brain-computer interface
- AI trong kh√¥ng gian v√† kh√°m ph√° v≈© tr·ª•

Chu·∫©n b·ªã cho t∆∞∆°ng lai:
- Gi√°o d·ª•c v√† ƒë√†o t·∫°o l·∫°i l·ª±c l∆∞·ª£ng lao ƒë·ªông
- Ph√°t tri·ªÉn khung ph√°p l√Ω cho AI
- H·ª£p t√°c qu·ªëc t·∫ø trong nghi√™n c·ª©u AI
- ƒê·∫£m b·∫£o AI an to√†n v√† c√≥ l·ª£i cho nh√¢n lo·∫°i

K·∫øt lu·∫≠n:
AI kh√¥ng ch·ªâ l√† m·ªôt c√¥ng ngh·ªá, m√† l√† m·ªôt cu·ªôc c√°ch m·∫°ng ƒëang ƒë·ªãnh h√¨nh l·∫°i c√°ch ch√∫ng ta s·ªëng, l√†m vi·ªác v√† t∆∞∆°ng t√°c v·ªõi th·∫ø gi·ªõi. Vi·ªác hi·ªÉu bi·∫øt v·ªÅ AI v√† c√°ch n√≥ ho·∫°t ƒë·ªông l√† ƒëi·ªÅu c·∫ßn thi·∫øt cho m·ªçi ng∆∞·ªùi trong th·ªùi ƒë·∫°i s·ªë h√≥a n√†y. Th√†nh c√¥ng trong vi·ªác t√≠ch h·ª£p AI ph·ª• thu·ªôc v√†o kh·∫£ nƒÉng c√¢n b·∫±ng gi·ªØa l·ª£i √≠ch v√† r·ªßi ro, ƒë·∫£m b·∫£o r·∫±ng c√¥ng ngh·ªá n√†y ph·ª•c v·ª• cho l·ª£i √≠ch chung c·ªßa to√†n nh√¢n lo·∫°i.`;
      
      setExtractedText(mockText);
      toast({
        title: "Upload th√†nh c√¥ng!",
        description: `File ${file.name} ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω v√† s·∫µn s√†ng ph√¢n t√≠ch v·ªõi AI.`,
      });
    } catch (error) {
      console.error('Error processing file:', error);
      toast({
        title: "L·ªói upload",
        description: "Kh√¥ng th·ªÉ x·ª≠ l√Ω file PDF. Vui l√≤ng th·ª≠ l·∫°i.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  const handleFeatureSelect = (feature: string) => {
    setActiveFeature(feature);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50">
      <Header />
      
      <main className="container mx-auto px-4 py-6 lg:py-8">
        {!uploadedFile ? (
          <div className="max-w-6xl mx-auto">
            <div className="text-center mb-8 lg:mb-12">
              <h1 className="text-3xl md:text-4xl lg:text-5xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-4 lg:mb-6">
                AI Book Reader
              </h1>
              <p className="text-lg lg:text-xl text-gray-600 max-w-3xl mx-auto px-4">
                T·∫£i l√™n file PDF v√† kh√°m ph√° s·ª©c m·∫°nh c·ªßa AI trong vi·ªác ph√¢n t√≠ch v√† hi·ªÉu n·ªôi dung s√°ch
              </p>
            </div>
            
            <div className="mb-12 lg:mb-16">
              <PDFUpload 
                onFileUpload={handleFileUpload} 
                isLoading={isLoading}
              />
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6">
              <div className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105">
                <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4">
                  <span className="text-2xl">üìÑ</span>
                </div>
                <h3 className="font-semibold text-gray-800 mb-2">T√≥m t·∫Øt th√¥ng minh</h3>
                <p className="text-gray-600 text-sm">AI t·∫°o ra b·∫£n t√≥m t·∫Øt ng·∫Øn g·ªçn v√† ch√≠nh x√°c nh·∫•t</p>
              </div>
              
              <div className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105">
                <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4">
                  <span className="text-2xl">üó∫Ô∏è</span>
                </div>
                <h3 className="font-semibold text-gray-800 mb-2">Mind Map</h3>
                <p className="text-gray-600 text-sm">Tr·ª±c quan h√≥a ki·∫øn th·ª©c v·ªõi s∆° ƒë·ªì t∆∞ duy</p>
              </div>
              
              <div className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105">
                <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4">
                  <span className="text-2xl">‚ùì</span>
                </div>
                <h3 className="font-semibold text-gray-800 mb-2">FAQ</h3>
                <p className="text-gray-600 text-sm">C√¢u h·ªèi th∆∞·ªùng g·∫∑p ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông</p>
              </div>
              
              <div className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105">
                <div className="w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center mb-4">
                  <span className="text-2xl">‚è∞</span>
                </div>
                <h3 className="font-semibold text-gray-800 mb-2">Timeline</h3>
                <p className="text-gray-600 text-sm">D√≤ng th·ªùi gian c√°c s·ª± ki·ªán quan tr·ªçng</p>
              </div>
            </div>
          </div>
        ) : (
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8 max-w-7xl mx-auto">
            <div className="lg:col-span-2 order-2 lg:order-1">
              <FeaturePanel 
                extractedText={extractedText}
                activeFeature={activeFeature}
                onFeatureSelect={handleFeatureSelect}
                fileName={uploadedFile.name}
              />
            </div>
            
            <div className="lg:col-span-1 order-1 lg:order-2">
              <div className="sticky top-20">
                <ChatInterface extractedText={extractedText} />
              </div>
            </div>
          </div>
        )}
      </main>
    </div>
  );
};

export default Index;
