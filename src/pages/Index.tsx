
import React, { useState } from 'react';
import { Header } from '../components/Header';
import { PDFUpload } from '../components/PDFUpload';
import { FeaturePanel } from '../components/FeaturePanel';
import { ChatInterface } from '../components/ChatInterface';
import { useToast } from '@/hooks/use-toast';

const Index = () => {
  const [uploadedFile, setUploadedFile] = useState<File | null>(null);
  const [extractedText, setExtractedText] = useState<string>('');
  const [activeFeature, setActiveFeature] = useState<string>('');
  const [isLoading, setIsLoading] = useState(false);
  const { toast } = useToast();

  const handleFileUpload = async (file: File) => {
    setIsLoading(true);
    try {
      setUploadedFile(file);
      
      // Simulate PDF text extraction with more comprehensive sample text
      const mockText = `Tr√≠ tu·ªá nh√¢n t·∫°o (AI) ƒëang thay ƒë·ªïi th·∫ø gi·ªõi m·ªôt c√°ch m·∫°nh m·∫Ω v√† to√†n di·ªán. Cu·ªën s√°ch n√†y kh√°m ph√° nh·ªØng ti·∫øn b·ªô v∆∞·ª£t b·∫≠c trong lƒ©nh v·ª±c AI v√† Machine Learning, t·ª´ nh·ªØng kh√°i ni·ªám c∆° b·∫£n ƒë·∫øn c√°c ·ª©ng d·ª•ng ph·ª©c t·∫°p trong th·ª±c t·∫ø.

Ch∆∞∆°ng 1: Gi·ªõi thi·ªáu v·ªÅ Tr√≠ tu·ªá Nh√¢n t·∫°o
Tr√≠ tu·ªá nh√¢n t·∫°o l√† kh·∫£ nƒÉng c·ªßa m√°y t√≠nh ƒë·ªÉ th·ª±c hi·ªán c√°c t√°c v·ª• th∆∞·ªùng y√™u c·∫ßu tr√≠ th√¥ng minh c·ªßa con ng∆∞·ªùi. L·ªãch s·ª≠ ph√°t tri·ªÉn AI b·∫Øt ƒë·∫ßu t·ª´ nh·ªØng nƒÉm 1950 v·ªõi Alan Turing v√† b√†i ki·ªÉm tra Turing n·ªïi ti·∫øng. T·ª´ ƒë√≥ ƒë·∫øn nay, AI ƒë√£ tr·∫£i qua nhi·ªÅu giai ƒëo·∫°n ph√°t tri·ªÉn, t·ª´ AI h·∫πp (Narrow AI) ƒë·∫øn AI t·ªïng qu√°t (General AI) v√† si√™u tr√≠ tu·ªá (Superintelligence).

Ch∆∞∆°ng 2: Machine Learning v√† Deep Learning
Machine Learning l√† m·ªôt nh√°nh c·ªßa AI cho ph√©p m√°y t√≠nh h·ªçc h·ªèi t·ª´ d·ªØ li·ªáu m√† kh√¥ng c·∫ßn ƒë∆∞·ª£c l·∫≠p tr√¨nh c·ª• th·ªÉ. C√≥ ba lo·∫°i ch√≠nh: h·ªçc c√≥ gi√°m s√°t (Supervised Learning), h·ªçc kh√¥ng gi√°m s√°t (Unsupervised Learning), v√† h·ªçc tƒÉng c∆∞·ªùng (Reinforcement Learning). Deep Learning, m·ªôt nh√°nh c·ªßa Machine Learning, s·ª≠ d·ª•ng m·∫°ng n∆°-ron nh√¢n t·∫°o ƒë·ªÉ m√¥ ph·ªèng c√°ch th·ª©c ho·∫°t ƒë·ªông c·ªßa n√£o ng∆∞·ªùi.

Ch∆∞∆°ng 3: ·ª®ng d·ª•ng AI trong Th·ª±c t·∫ø
AI ƒëang ƒë∆∞·ª£c ·ª©ng d·ª•ng r·ªông r√£i trong nhi·ªÅu lƒ©nh v·ª±c: y t·∫ø (ch·∫©n ƒëo√°n h√¨nh ·∫£nh, ph√°t hi·ªán b·ªánh), giao th√¥ng (xe t·ª± l√°i), t√†i ch√≠nh (ph√°t hi·ªán gian l·∫≠n, trading), gi√°o d·ª•c (h·ªçc t·∫≠p c√° nh√¢n h√≥a), v√† gi·∫£i tr√≠ (tr√≤ ch∆°i, content creation).

Ch∆∞∆°ng 4: Th√°ch th·ª©c v√† C∆° h·ªôi
Trong khi AI mang l·∫°i nhi·ªÅu l·ª£i √≠ch, n√≥ c≈©ng ƒë·∫∑t ra nh·ªØng th√°ch th·ª©c v·ªÅ ƒë·∫°o ƒë·ª©c, an to√†n, v√† t√°c ƒë·ªông x√£ h·ªôi. V·∫•n ƒë·ªÅ bias trong d·ªØ li·ªáu, s·ª± thay th·∫ø lao ƒë·ªông, v√† quy·ªÅn ri√™ng t∆∞ l√† nh·ªØng m·ªëi quan t√¢m ch√≠nh. Tuy nhi√™n, n·∫øu ƒë∆∞·ª£c ph√°t tri·ªÉn v√† s·ª≠ d·ª•ng ƒë√∫ng c√°ch, AI c√≥ th·ªÉ gi·∫£i quy·∫øt nhi·ªÅu v·∫•n ƒë·ªÅ to√†n c·∫ßu nh∆∞ bi·∫øn ƒë·ªïi kh√≠ h·∫≠u, ngh√®o ƒë√≥i, v√† b·ªánh t·∫≠t.

Ch∆∞∆°ng 5: T∆∞∆°ng lai c·ªßa AI
T∆∞∆°ng lai c·ªßa AI h·ª©a h·∫πn nh·ªØng ƒë·ªôt ph√° ƒë√°ng kinh ng·∫°c. AI c√≥ th·ªÉ tr·ªü th√†nh ƒë·ªëi t√°c ƒë√°ng tin c·∫≠y trong nghi√™n c·ª©u khoa h·ªçc, ph√°t tri·ªÉn thu·ªëc m·ªõi, v√† gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ ph·ª©c t·∫°p. Tuy nhi√™n, vi·ªác ƒë·∫£m b·∫£o AI an to√†n v√† c√≥ l·ª£i cho to√†n nh√¢n lo·∫°i l√† tr√°ch nhi·ªám c·ªßa t·∫•t c·∫£ ch√∫ng ta.

K·∫øt lu·∫≠n:
AI kh√¥ng ch·ªâ l√† m·ªôt c√¥ng ngh·ªá, m√† l√† m·ªôt cu·ªôc c√°ch m·∫°ng ƒëang ƒë·ªãnh h√¨nh l·∫°i c√°ch ch√∫ng ta s·ªëng, l√†m vi·ªác v√† t∆∞∆°ng t√°c v·ªõi th·∫ø gi·ªõi. Hi·ªÉu bi·∫øt v·ªÅ AI v√† c√°ch n√≥ ho·∫°t ƒë·ªông l√† ƒëi·ªÅu c·∫ßn thi·∫øt cho m·ªçi ng∆∞·ªùi trong th·ªùi ƒë·∫°i s·ªë h√≥a n√†y.`;
      
      setExtractedText(mockText);
      toast({
        title: "Upload th√†nh c√¥ng!",
        description: `File ${file.name} ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω v√† s·∫µn s√†ng ph√¢n t√≠ch v·ªõi AI.`,
      });
    } catch (error) {
      console.error('Error processing file:', error);
      toast({
        title: "L·ªói upload",
        description: "Kh√¥ng th·ªÉ x·ª≠ l√Ω file PDF. Vui l√≤ng th·ª≠ l·∫°i.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  const handleFeatureSelect = (feature: string) => {
    setActiveFeature(feature);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50">
      <Header />
      
      <main className="container mx-auto px-4 py-8">
        {!uploadedFile ? (
          <div className="max-w-4xl mx-auto">
            <div className="text-center mb-12">
              <h1 className="text-5xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-6">
                AI Book Reader
              </h1>
              <p className="text-xl text-gray-600 max-w-2xl mx-auto">
                T·∫£i l√™n file PDF v√† kh√°m ph√° s·ª©c m·∫°nh c·ªßa AI trong vi·ªác ph√¢n t√≠ch v√† hi·ªÉu n·ªôi dung s√°ch
              </p>
            </div>
            
            <PDFUpload 
              onFileUpload={handleFileUpload} 
              isLoading={isLoading}
            />
            
            <div className="mt-16 grid md:grid-cols-2 lg:grid-cols-4 gap-6">
              <div className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow">
                <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4">
                  üìÑ
                </div>
                <h3 className="font-semibold text-gray-800 mb-2">T√≥m t·∫Øt th√¥ng minh</h3>
                <p className="text-gray-600 text-sm">AI t·∫°o ra b·∫£n t√≥m t·∫Øt ng·∫Øn g·ªçn v√† ch√≠nh x√°c nh·∫•t</p>
              </div>
              
              <div className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow">
                <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4">
                  üó∫Ô∏è
                </div>
                <h3 className="font-semibold text-gray-800 mb-2">Mind Map</h3>
                <p className="text-gray-600 text-sm">Tr·ª±c quan h√≥a ki·∫øn th·ª©c v·ªõi s∆° ƒë·ªì t∆∞ duy</p>
              </div>
              
              <div className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow">
                <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4">
                  ‚ùì
                </div>
                <h3 className="font-semibold text-gray-800 mb-2">FAQ</h3>
                <p className="text-gray-600 text-sm">C√¢u h·ªèi th∆∞·ªùng g·∫∑p ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông</p>
              </div>
              
              <div className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow">
                <div className="w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center mb-4">
                  ‚è∞
                </div>
                <h3 className="font-semibold text-gray-800 mb-2">Timeline</h3>
                <p className="text-gray-600 text-sm">D√≤ng th·ªùi gian c√°c s·ª± ki·ªán quan tr·ªçng</p>
              </div>
            </div>
          </div>
        ) : (
          <div className="grid lg:grid-cols-3 gap-8">
            <div className="lg:col-span-2">
              <FeaturePanel 
                extractedText={extractedText}
                activeFeature={activeFeature}
                onFeatureSelect={handleFeatureSelect}
                fileName={uploadedFile.name}
              />
            </div>
            
            <div className="lg:col-span-1">
              <ChatInterface extractedText={extractedText} />
            </div>
          </div>
        )}
      </main>
    </div>
  );
};

export default Index;
